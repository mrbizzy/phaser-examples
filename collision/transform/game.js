// Generated by LiveScript 1.2.0
(function(){
  'use strict';
  var game, testGroup, sprite1, sprite2, sprite3, test1, test2, go1, go2, collisionHandler;
  game = new Phaser.Game(800, 600, Phaser.CANVAS, '', {
    preload: preload,
    create: create,
    update: update,
    render: render
  });
  function preload(){
    game.load.image('atari', '../../../phaser/examples/assets/sprites/atari130xe.png');
    game.load.image('mushroom', '../../../phaser/examples/assets/sprites/mushroom2.png');
    return game.load.image('flectrum', '../../../phaser/examples/assets/sprites/flectrum.png');
  }
  function create(){
    game.stage.backgroundColor = '#2d2d2d';
    game.world.setBounds(-1000, -1000, 2000, 2000);
    testGroup = game.add.group();
    return test2();
  }
  test1 = function(){
    sprite1 = game.add.sprite(-600, 200, 'atari');
    sprite1.name = 'atari';
    sprite2 = game.add.sprite(-100, 220, 'mushroom');
    game.camera.focusOn(sprite1);
    game.camera.x += 300;
    return game.input.onDown.add(go1, this);
  };
  test2 = function(){
    sprite1 = testGroup.create(0, -150, 'atari');
    sprite1.name = 'atari';
    sprite1.body.immovable = true;
    sprite2 = game.add.sprite(-100, 140, 'mushroom');
    sprite2.name = 'mushroom';
    sprite3 = game.add.sprite(-200, 150, 'flectrum');
    sprite3.name = 'tall';
    testGroup.x = -600;
    testGroup.y = 200;
    game.camera.focusOn(sprite2);
    game.camera.x -= 300;
    return game.input.onDown.add(go2, this);
  };
  go1 = function(){
    sprite1.body.velocity.x = 100;
    return sprite2.body.velocity.x = -100;
  };
  go2 = function(){
    return sprite2.body.velocity.x = -100;
  };
  function update(){
    return game.physics.collide(sprite1, sprite2, collisionHandler, null, this);
  }
  collisionHandler = function(obj1, obj2){
    game.stage.backgroundColor = '#992d2d';
    return console.log(obj1.name + " collided with " + obj2.name);
  };
  function render(){
    game.debug.renderSpriteCoords(sprite1, 32, 32);
    game.debug.renderSpriteCoords(sprite2, 300, 32);
    game.debug.renderCameraInfo(game.camera, 32, 500);
    game.debug.renderSpriteBody(sprite1);
    game.debug.renderSpriteBody(sprite2);
    game.debug.renderSpriteBody(sprite3);
    game.debug.renderGroupInfo(testGroup, 500, 500);
    return game.debug.renderPixel(testGroup.x, testGroup.y, 'rgb(255,255,0)');
  }
}).call(this);
