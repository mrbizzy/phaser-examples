// Generated by LiveScript 1.2.0
(function(){
  'use strict';
  var map, robot, eye, body, leftArm, rightArm, leftLeg, rightLeg, preload, create, render, enableDrag, g;
  map = require('prelude-ls').map;
  preload = function(){
    g.load.image('eye', '../../../phaser/examples/assets/sprites/robot/eye.png');
    g.load.image('body', '../../../phaser/examples/assets/sprites/robot/body.png');
    g.load.image('arm-l', '../../../phaser/examples/assets/sprites/robot/arm-l.png');
    g.load.image('arm-r', '../../../phaser/examples/assets/sprites/robot/arm-r.png');
    g.load.image('leg-l', '../../../phaser/examples/assets/sprites/robot/leg-l.png');
    return g.load.image('leg-r', '../../../phaser/examples/assets/sprites/robot/leg-r.png');
  };
  create = function(){
    var offsetX, offsetY;
    offsetX = -g.world.width / 2;
    offsetY = -g.world.height / 2;
    robot = g.add.group();
    robot.x = g.world.centerX;
    robot.y = g.world.centerY;
    leftArm = robot.create(offsetX + 90, offsetY + 175, 'arm-l');
    rightArm = robot.create(offsetX + 549, offsetY + 175, 'arm-r');
    leftLeg = robot.create(offsetX + 270, offsetY + 325, 'leg-l');
    rightLeg = robot.create(offsetX + 410, offsetY + 325, 'leg-r');
    body = robot.create(offsetX + 219, offsetY + 32, 'body');
    eye = robot.create(offsetX + 335, offsetY + 173, 'eye');
    return robot.forEach(function(sprite){
      return enableDrag(sprite);
    });
  };
  render = function(){
    g.debug.renderSpriteInfo(leftArm, 32, 30);
    g.debug.renderSpriteInfo(rightArm, 32, 180);
    g.debug.renderSpriteInfo(leftLeg, 32, 325);
    g.debug.renderSpriteInfo(rightLeg, 32, 470);
    g.debug.renderSpriteInfo(body, 450, 30);
    g.debug.renderSpriteInfo(eye, 450, 180);
    g.debug.renderText('The robot is a group and every component is a sprite.', 240, 580);
    return g.debug.renderText('Drag each part to reposition them. ', 288, 592);
  };
  enableDrag = function(sprite){
    sprite.input.start(0, false, true);
    return sprite.input.enableDrag();
  };
  g = new Phaser.Game(800, 600, Phaser.CANVAS, '', {
    preload: preload,
    create: create,
    render: render
  });
}).call(this);
